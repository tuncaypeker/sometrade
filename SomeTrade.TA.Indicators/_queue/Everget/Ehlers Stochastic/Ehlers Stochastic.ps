//@version=3
// Copyright (c) 2018-present, Alex Orekhov (everget)
// Ehlers Stochastic script may be freely distributed under the MIT license.
study("Ehlers Stochastic", shorttitle="EStoch")

highpassLength = input(title="High-Pass Filter Length", type=integer, defval=48)
stochLength = input(title="Stochastic Length", type=integer, defval=20)
ssfLength = input(title="Super Smoother Filter Length", type=integer, defval=10)
numberOfPoles = input(title="Super Smoother Filter Poles", type=integer, defval=2, options=[2, 3])
obLevel = input(title="Overbought Level", type=float, defval=0.8, step=0.1)
osLevel = input(title="Oversold Level", type=float, defval=0.2, step=0.1)
src = input(title="Source", type=source, defval=close)
highlightBreakouts = input(title="Highlight Overbought/Oversold Breakouts ?", type=bool, defval=true)

PI = 2 * asin(1)

_ssf2(src, length) =>
    arg = sqrt(2) * PI / length
    a1 = exp(-arg)
    b1 = 2 * a1 * cos(arg)
    c2 = b1
    c3 = -pow(a1, 2)
    c1 = 1 - c2 - c3
    
    ssf = 0.0
    ssf := c1 * src + c2 * nz(ssf[1]) + c3 * nz(ssf[2])

_ssf3(src, length) =>
    arg = PI / length
    a1 = exp(-arg)
    b1 = 2 * a1 * cos(1.738 * arg)
    c1 = pow(a1, 2)

    coef2 = b1 + c1
    coef3 = -(c1 + b1 * c1)
    coef4 = pow(c1, 2)
    coef1 = 1 - coef2 - coef3 - coef4

    ssf = 0.0
    ssf := coef1 * src + coef2 * nz(ssf[1]) + coef3 * nz(ssf[2]) + coef4 * nz(ssf[3])

_rf(src, highpassLength, ssfLength, numberOfPoles) =>
    alphaArg = 2 * PI / (highpassLength * sqrt(2))
    
    alpha = 0.0
    alpha := cos(alphaArg) != 0
         ? (cos(alphaArg) + sin(alphaArg) - 1) / cos(alphaArg)
         : nz(alpha[1])
    
    highpass = 0.0
    highpass := pow(1 - (alpha / 2), 2) * (src - 2 * nz(src[1]) + nz(src[2])) + 2 * (1 - alpha) * nz(highpass[1]) - pow(1 - alpha, 2) * nz(highpass[2])
    arg = (highpass + nz(highpass[1])) / 2

    numberOfPoles == 2
         ? _ssf2(arg, ssfLength)
         : _ssf3(arg, ssfLength)

_stoch(rf, stochLength, ssfLength, numberOfPoles) =>
    estoch = fixnan(stoch(rf, rf, rf, stochLength) / 100)
    estoch := na(estoch) ? 0 : estoch

    arg = (estoch + nz(estoch[1])) / 2
    
    numberOfPoles == 2
         ? _ssf2(arg, ssfLength)
         : _ssf3(arg, ssfLength)

erf = _rf(src, highpassLength, ssfLength, numberOfPoles)
estoch = _stoch(erf, stochLength, ssfLength, numberOfPoles)

estochColor = estoch > obLevel ? #0ebb23 : estoch < osLevel ? red : #f4b77d
plot(estoch, title="EStoch", linewidth=2, color=estochColor, transp=0)

transparent = color(white, 100)

maxLevelPlot = hline(1, title="Max Level", linestyle=dotted, color=transparent)
obLevelPlot = hline(obLevel, title="Overbought Level", linestyle=dotted)
hline(0.5, title="Middle Level", linestyle=dotted)
osLevelPlot = hline(osLevel, title="Oversold Level", linestyle=dotted)
minLevelPlot = hline(0, title="Min Level", linestyle=dotted, color=transparent)

fill(obLevelPlot, osLevelPlot, color=purple, transp=95)

obFillColor = estoch > obLevel and highlightBreakouts ? green : transparent
osFillColor = estoch < osLevel and highlightBreakouts ? red : transparent

fill(maxLevelPlot, obLevelPlot, color=obFillColor, transp=90)
fill(minLevelPlot, osLevelPlot, color=osFillColor, transp=90)
