//@version=3
// Copyright (c) 2018-present, Alex Orekhov (everget)
// Stochastic Momentum Index script may be freely distributed under the MIT license.
study("Stochastic Momentum Index", shorttitle="SMI")

q = input(title="Stochastic Lookback", type=integer, defval=13, minval=1)
r = input(title="1st Smoothing Length", type=integer, defval=25, minval=1)
s = input(title="2nd Smoothing Length", type=integer, defval=2, minval=1)
signalLength = input(title="Signal Length", type=integer, defval=12, minval=1)
obLevel = input(title="Overbought Level", type=integer, defval=40)
osLevel = input(title="Oversold Level", type=integer, defval=-40)
maxLevel = input(title="Max Level", type=integer, defval=75)
minLevel = input(title="Min Level", type=integer, defval=-75)
src = input(title="Source", type=source, defval=close)
showHistogram = input(title="Show Histogram ?", type=bool, defval=false)
highlightBreakouts = input(title="Highlight Overbought/Oversold Breakouts ?", type=bool, defval=true)
highlightCrossovers = input(title="Highlight SMI/Signal Crossovers ?", type=bool, defval=false)
highlightZeroCrossovers = input(title="Highlight Zero Line Crossovers ?", type=bool, defval=false)
applyFilling = input(title="Apply Ribbon Filling ?", type=bool, defval=false)

hh = highest(q)
ll = lowest(q)

numerator = ema(ema(src - 0.5 * (hh + ll), r), s)
denominator = 0.5 * ema(ema(hh - ll, r), s)

smi = 100 * numerator / denominator
signal = ema(smi, signalLength)

hist = smi - signal
histColor = hist >= 0 ? (hist[1] < hist ? #26A69A : #B2DFDB) : (hist[1] < hist ? #FFCDD2 : #EF5350)
plot(showHistogram ? hist : na, title="Histogram", style=columns, color=histColor, transp=0)

trendColor = smi > signal ? #0ebb23 : red
smiColor = applyFilling ? trendColor : #ff3e7d
signalColor = applyFilling ? trendColor : #3c78d8

smiPlot = plot(smi, title="SMI", color=smiColor, transp=0)
signalPlot = plot(signal, title="Signal", color=signalColor, transp=0)

transparent = color(white, 100)

maxLevelPlot = hline(maxLevel, title="Max Level", linestyle=dotted, color=transparent)
obLevelPlot = hline(obLevel, title="Overbought Level", linestyle=dotted, color=#00796b)
hline(0, title="Zero Level", linestyle=dotted, color=#989898)
osLevelPlot = hline(osLevel, title="Oversold Level", linestyle=dotted, color=#f57f17)
minLevelPlot = hline(minLevel, title="Min Level", linestyle=dotted, color=transparent)
fill(obLevelPlot, osLevelPlot, color=purple, transp=95)

obFillColor = smi > obLevel and highlightBreakouts ? green : transparent
osFillColor = smi < osLevel and highlightBreakouts ? red : transparent

fill(maxLevelPlot, obLevelPlot, color=obFillColor, transp=85)
fill(minLevelPlot, osLevelPlot, color=osFillColor, transp=85)

fillColor = applyFilling ? trendColor : transparent
fill(smiPlot, signalPlot, color=fillColor, transp=70)

zeroCrossBgColor = highlightZeroCrossovers ? (smi > 0 ? green : red) : transparent
bgcolor(zeroCrossBgColor, transp=90)

plotshape(highlightCrossovers and crossover(smi, signal) ? smi : na, title="Crossover", location=location.absolute, style=shape.circle, size=size.tiny, color=green, transp=0)
plotshape(highlightCrossovers and crossunder(smi, signal) ? smi : na, title="Crossunder", location=location.absolute, style=shape.circle, size=size.tiny, color=red, transp=0)
